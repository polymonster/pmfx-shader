{
    include: [
        "v2_examples.hlsl"
    ]
    depth_stencil_states: {
        depth_test_less: {
        }
        depth_test_never: {
        }
    }
    render_target_blend_states: {
        disabled: {
            blend_enabled: false
        }
        additive: {
            blend_enabled: true
            src_blend: One
            dst_blend: One
        }
        alpha: {
            blend_enabled: true
            src_blend: SrcAlpha
            dst_blend: InvSrcAlpha
        }
    }
    blend_states: {
        mrt_blend: {
            render_target: [
                "additive"
                "alpha"
            ]
        }
    }
    pipelines: {
        basic_lit: {
            vs: vs_main
            ps: ps_main
            depth_stencil_state: depth_test_less
            vertex_layout: {
                vs_input: {
                    input_slot: 1
                }
                instance_input: {
                    input_slot: 2,
                    input_slot_class: "PerInstance"
                }
            }
        }
        basic_lit_2: {
            vs: vs_main_mixed_semantics
            ps: ps_main
            depth_stencil_state: depth_test_never
        }
        basic_lit_3: {
            vs: vs_main_separate_elements
            ps: ps_main
            depth_stencil_state: depth_test_never
        }
        basic_lit_4: {
            vs: vs_main_permutations
            ps: ps_main
            depth_stencil_state: depth_test_never
            permutations: {
                SKINNED: [31, [0,1]],
                INSTANCED: [30, [0,1]]
            }
        }
        blend: {
            vs: vs_main
            ps: ps_main
            blend_state: mrt_blend
        }
        blend_without_mrt: {
            vs: vs_main
            ps: ps_main
            blend_state: alpha
        }
        bindless: {
            vs: vs_test_bindless_aliasing
            ps: ps_test_bindless_aliasing
        }
        test_cbuffer_unscoped: {
            vs: vs_test_use_cbuffer_unscoped
            ps: ps_main
        }
        test_cbuffer_scoped: {
            vs: vs_test_use_cbuffer_scoped
            ps: ps_main
        }
        test_nested_structures: {
            vs: vs_test_nested_structures
            ps: ps_main
        }
        test_desriptor_layout: {
            vs: vs_test_pipeline_layout
            ps: ps_test_pipeline_layout
        }
        test_output_sematic: {
            vs: vs_main
            ps: ps_output_semantic
        }
    }
}